name: Build images

on:
  push:
    tags:
      - '*'

jobs:
  print-the-github-ref:
    name: Print the github ref
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Print the github ref
        run: |
          echo "The github ref is ${{ github.ref }}"
          echo "The app version is ${GITHUB_REF#refs/tags/v}"

  check-tag-name-is-valid:
    needs: print-the-github-ref
    name: Check tag name is valid
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check tag name is valid
        run: |
          if [[ ! ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Tag name is not valid. It should be in the format of v1.2.3"
            exit 1
          fi

  get-the-version-number-from-tag-name:
    needs: check-tag-name-is-valid
    name: Get the version number from tag name
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set tag name without 'v'
        run: |
          echo "APP_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

  build-laravel-octane-image:
    needs: get-the-version-number-from-tag-name
    name: Start to build laravel octane image and publish to docker hub
    runs-on: ubuntu-latest
    env:
      APP_VERSION: ${{ steps.get-the-version-number-from-tag-name.outputs.APP_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build laravel octane image and publish to docker hub
        uses: ./.github/actions/publish-to-docker-hub
        with:
          registry_username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry_password: ${{ secrets.DOCKERHUB_TOKEN }}
          file: dockerfiles/Dockerfile.app
          platforms: linux/amd64, linux/arm64
          image_name: nella0128/docfunc-app
          image_tag: ${{ env.APP_VERSION }}

  build-laravel-queue-image:
    needs: get-the-version-number-from-tag-name
    name: Start to build laravel queue image and publish to docker hub
    runs-on: ubuntu-latest
    env:
      APP_VERSION: ${{ steps.get-the-version-number-from-tag-name.outputs.APP_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and push laravel queue
        uses: ./.github/actions/publish-to-docker-hub
        with:
          registry_username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry_password: ${{ secrets.DOCKERHUB_TOKEN }}
          file: dockerfiles/Dockerfile.queue
          platforms: linux/amd64, linux/arm64
          image_name: nella0128/docfunc-queue
          image_tag: ${{ env.APP_VERSION }}

  build-laravel-scheduler-image:
    needs: get-the-version-number-from-tag-name
    name: Start to build laravel scheduler image and publish to docker hub
    runs-on: ubuntu-latest
    env:
      APP_VERSION: ${{ steps.get-the-version-number-from-tag-name.outputs.APP_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and push laravel scheduler
        uses: ./.github/actions/publish-to-docker-hub
        with:
          registry_username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry_password: ${{ secrets.DOCKERHUB_TOKEN }}
          file: dockerfiles/Dockerfile.scheduler
          platforms: linux/amd64, linux/arm64
          image_name: nella0128/docfunc-scheduler
          image_tag: ${{ env.APP_VERSION }}

  build-aws-mysql-client-image:
    needs: get-the-version-number-from-tag-name
    name: Start to build aws mysql client image and publish to docker hub
    runs-on: ubuntu-latest
    env:
      APP_VERSION: ${{ steps.get-the-version-number-from-tag-name.outputs.APP_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and push aws mysql client
        uses: ./.github/actions/publish-to-docker-hub
        with:
          registry_username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry_password: ${{ secrets.DOCKERHUB_TOKEN }}
          file: dockerfiles/Dockerfile.aws-mysql-client
          platforms: linux/amd64, linux/arm64
          image_name: nella0128/aws-mysql-client
          image_tag: ${{ env.APP_VERSION }}
